
// :::  M I X I N S    T R A N S I T IO N ::: //
// -------------------------------------------//


// Custom easing: @see => http://matthewlein.com/ceaser/
$yupik-transition-ease-fade : cubic-bezier(0.25, 0.46, 0.45, 0.94) !default;
$yupik-transition-ease-slide: ease-in-out !default; 
$yupik-transition-ease-prog : cubic-bezier(0.000, 0.650, 0.705, 0.920) !default;

// Default values
$yupik-transition-duration  : 200ms !default;
$yupik-transition-ease      : linear !default;


// Transition slide animation
// ==========================
// @param $duration (optional) | default duration => $yupik-transition-duration
// @param $easing (optional) | default easing => $yupik-transition-ease-slide
@mixin transition-slide-animation($param: null) {

    $duration: $yupik-transition-duration;
    $easing  : $yupik-transition-ease-slide;

    @if $param { 
        $duration: nth($param, 1); 
    }

    @if length($param) >= 2 { 
        $easing: nth($param, 2); 
    }

    @include vendor(transition-property, (max-height, visibility) );
    @include transition-duration-and-easing($duration, $easing);
}


// Transition opacity zero
// =======================
// @see transition-slide-up mixin above
// default easing => linear
@mixin transition-opacity-transition($param: null) {

    $duration: $yupik-transition-duration;
    $easing: linear;
    
    @if $param { 
        $duration: nth($param, 1); 
    }

    @if length($param) >= 2 { 
        $easing: nth($param, 2); 
    }

    @include vendor(transition-property, (opacity, visibility) );
    @include transition-duration-and-easing($duration, $easing);
}



// Mixin useful in mixins above
@mixin transition-duration-and-easing($duration: $yupik-transition-duration, $easing: $yupik-transition-ease) {

    @include vendor(transition-duration, $duration);
    @include vendor(transition-timing-function, $easing);
}

/* ------------------------- */
/* ::: A N I M A T I O N ::: */
/* ------------------------- */


// Copy these transition placeholders  in your style
// =================================================
// => @see base/mixin/animation for equivalent with mixin
// => @use @extend %transition-slide-up; (on close state)
//         @extend %transition-slide-down; (on open state)
// => DON'T USE IN MEDIA QUERIES !

// %transition-slide-up { 
//     max-height: 0; 
//     overflow: hidden; visibility: hidden;
//     @include transition-slide-animation;
//     // or
//     @include transition-slide-animation(myDuration myEasing);
// }

// %transition-slide-down { 
//     max-height: 500px; // change value if block higher than 500px
//     visibility: visible;
// }

// %transition-opacity-zero { 
//     opacity: 0; // need callback for IE
//     visibility: hidden;
//     @include transition-opacity-transition;
// }

// %transition-opacity-one { 
//     opacity: 1; // need callback for IE
//     visibility: visible;
// }